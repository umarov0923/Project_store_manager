version: '3.8'

services:
  feathers:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: feathers-app
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://mongo:27017/backend}
    volumes:
      - ./backend:/app
      - /app/node_modules  # Исключаем node_modules из монтирования
    command: npm run dev
    networks:
      - app-network
    depends_on:
      mongo:
        condition: service_healthy  # Ждём, пока MongoDB будет действительно готова
    restart: unless-stopped  # Автоперезапуск при сбоях

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=backend
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    ports:
      - "27017:27017"
    healthcheck:  # Добавляем проверку здоровья
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  vue:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-app
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost/api  # URL для API
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Исключаем node_modules
    networks:
      - app-network
    depends_on:
      - feathers
    restart: unless-stopped
    command: npm run dev -- --host  # Добавляем --host для доступа извне контейнера

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    depends_on:
      - vue
      - feathers
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:  # Добавляем проверку здоровья
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
    name: app-network  # Явно задаём имя сети

volumes:
  mongo-data:
    name: app-mongo-data  # Явно задаём имя volume
